//
//  BooksListInteractor.swift
//  BooksRUs
//
//  Created by Cathal Farrell on 10/09/2021.
//  Copyright (c) 2021 BooksRUs. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BooksListBusinessLogic {
	func fetchBooks(request: BooksList.FetchBooks.Request)
	func fetchAllStoredBooks(request: BooksList.FetchBooks.Request)
}

protocol BooksListDataStore {
	// var name: String { get set }
}

class BooksListInteractor: BooksListBusinessLogic, BooksListDataStore {
	var presenter: BooksListPresentationLogic?
	var worker: BooksListWorker?
	// var name: String = ""

	// MARK: Fetch all books from the Network

	func fetchBooks(request: BooksList.FetchBooks.Request) {
		worker = BooksListWorker()
		worker?.getAllBooks(completionHandler: { books, error in
			let response = BooksList.FetchBooks.Response(books: books, error: error)
			self.presenter?.presentBooks(response: response)
		})
	}

	// MARK: Fetch all books from Storage

	func fetchAllStoredBooks(request: BooksList.FetchBooks.Request) {
		worker = BooksListWorker()
		worker?.getAllStoredBooks(completionHandler: { books, error in
			let response = BooksList.FetchBooks.Response(books: books, error: error)
			self.presenter?.presentStoredBooks(response: response)
		})
	}
}
